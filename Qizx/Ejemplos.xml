

<html>
<body>
<h1>Bailes ofertados</h1>
<table style="border:1px solid black">
<tr>
	<th>Nombre</th>
	<th>Profesor</th>
	<th>Plazas</th>
</tr>
{
for $baile in //Bailes/baile 
let $nombre:=$baile/nombre
let $profesor:=$baile/profesor
let $plazas:=$baile/plazas
where $baile/precio[@cuota="trimestral"] 	<!-- ordenar-->
order by $baile/plazas ascending
return
	<tr>
	<td>{data($nombre)}</td>
	<td>{data($profesor)}</td>
	<td>{data($plazas)}</td>
	</tr>
}
</table>
</body>
</html>

<!--Insertar nodo-->
insert node
<baile id="7">
<nombre>Foxtrot</nombre>
<precio cuota="mensual" moneda="dolares">22</precio>
<plazas>12</plazas>
<comienzo>01/01/2020</comienzo>
<fin>01/03/2020</fin>
<profesor>Freddy</profesor>
<sala>3</sala>
</baile>
before //Bailes/baile[1]

<!--Actualizar campos de un nodo-->
replace value of node //Bailes/baile[1]/profesor
with "Profe"
,
replace value of node //Bailes/baile[1]/plazas
with 200

-------------------------------------------------------------
replace value of node //Bailes/baile[@id=6]/profesor
with "Profeeeeee"
,
replace value of node //Bailes/baile[@id=6]/plazas
with 200000

<!--Borrar nodo-->
delete node //Bailes/baile[@id=7]

<!--Enlace Cruzado-->

for $t in doc("Biblioteca.xml")//libro, 
$e in doc("Prestamos.xml")//entrada
where $t/titulo = $e/titulo
order by $e//prestamo/inicio
return
	<prestamo>
	{$t/titulo, $t/autor/*, $e/prestamo/inicio, $e/prestamo/devolución}
	</prestamo>

<!--Buscar -->
for $tit in //bookstore/book/title/text()
return <titulo>{$tit}</titulo>
-------------------------------------------------------------------------
for $libro in //bookstore/book
where $libro/price <= 30
return $libro
--------------------------------------------------------
for $libro in //bookstore/book[price<=30]
return $libro/title 
--------------------------------------------------------
for $libro in //bookstore/book[price<=30]
return <title>{$libro/title/text()}</title>

	<!--titulo y autor de 2005 y etiquetarlo con lib 2005-->
for $libro in //bookstore/book[year<=2005]
return 
<lib2005>
<title>{$libro/title/text()}</title>
<author>{$libro/author/text()}</author>
</lib2005>
-------------------------------------------------------------
	<!--mostrar libros ordenados por categoria y luego por titulo en una sola consulta-->
for $libro in //bookstore/book
order by $libro/@category, $libro/title
return $libro
	<!--mostrar cuantos libros hay y guardarlo en una etiqueta llamada total-->
let $cuantos :=count(bookstore/book)
return <total>{$cuantos}</total>
	<!--mostrar los titulos de los libros y al final una etiqueta con total de libros-->
let $total :=count(bookstore/book), 
$titulos :=(
  for $libro in //bookstore/book/title
  return <titulo>{$libro/text()}</titulo>
)
return 
<resultado>
{$titulos}
<total>{$total}</total>
</resultado>
	<!--mostrar el precio minimo y maximo de los libros-->
let $minimo :=min(//bookstore/book/price)
let $maximo :=max(//bookstore/book/price)
return 
<precio>
  <minimo>{$minimo}</minimo>
  <maximo>{$maximo}</maximo>
</precio>
	<!-- Mostrar el título y el número de autores que tiene cada libro en etiquetas diferentes-->
for $titulos in //bookstore/book
let $autores := count($titulos/author/text())
return
<libro>
<titulo>{$titulos/title/text()}</titulo>
<Número_de_autores>{$autores}</Número_de_autores> </libro>
	<!-- Mostrar cada uno de los precios de los libros, y al final una nueva etiqueta con la suma de los precios (Función sum())-->
let $suma := sum(//bookstore/book/price), $precio := (
for $libro in //bookstore/book/price
return <precio>{$libro/text()}</precio>)
return 
   <resultado>
     {$precio}
     <suma>{$suma}</suma>
   </resultado>

<!--Segunda forma-->

let $precios := //bookstore/book/price,
$sumaprecios := sum($precios)
return
  <listaprecios>
    {$precios}
    <suma>{$sumaprecios}</suma>
  </listaprecios>

	<!--Mostrar en la misma etiqueta el titulo y entre parentesis el numero de autores -->
for $titulo in //bookstore/book
let $titulos := $titulo/title/text(),
$num_autores := count($titulo/author)
return
<libro>{$titulos}, ({$num_autores})</libro>
	<!--Mostrar los libros escritos en años que terminen en 3-->
for $titulo in //bookstore/book
where ends-with($titulo/year, "3")
return
$titulo/title/text()
	<!--Mostrar los libros cuya categoria empieze por "C" 
	y que tengan una "p" mayuscula o minuscula en el titulo -->
for $libro in //bookstore/book
where starts-with($libro/@category, "C") 
and contains($libro/title, "p")
or contains($libro/title, "P")
return
$libro
	<!--Mostrar el titulo y el numero de caracteres que tiene cada titulo (string-length())-->
for $libro in //bookstore/book/title
let $num := $libro/string-length($libro)
return
<libro>
<titulo>{$libro/text()}</titulo>
<caracteres>{$num}</caracteres>
</libro>
	<!--Mostrar todos los años en los que se ha publicado 
	un libro eliminando los repetidos (distinct-values)-->
for $libro in //bookstore/book/year
where distinct-values($libro)
return
$libro
	<!--Mostrar los títulos en una tabla html-->
for $libro in //bookstore/book/title/text()
return
<html style="border:2px solid black">
<body>
<p>$libro</p>
</body>
</html>